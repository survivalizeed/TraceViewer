name: Nightly Release

on:
  schedule:
    - cron: '0 0 * * *' #
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: .NET SDK Setup
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: NuGet Paket Restore
        run: dotnet restore

      - name: Publish WPF Application
        run: dotnet publish --configuration Release --framework net8.0-windows --runtime win-x64

      # ### NEUE DEBUGGING-SCHRITTE DIREKT NACH "Publish WPF Application" ###
      - name: Debug - Liste Publish Output Ordner Inhalt auf (direkt nach Publish)
        shell: pwsh
        run: |
          Write-Host "### Debug: Inhalt des Publish Output Ordners direkt nach 'dotnet publish' ###"
          Get-ChildItem -Path "./TraceViewer/bin/Release/net8.0-windows/win-x64/publish/" -Recurse

      - name: Debug - Liste bin\Release Ordner Inhalt auf (gesamter bin\Release)
        shell: pwsh
        run: |
          Write-Host "### Debug: Inhalt des gesamten bin\Release Ordners (zum Vergleich) ###"
          Get-ChildItem -Path "./TraceViewer/bin/Release/" -Recurse


      - name: Get Release Date
        id: get_date
        run: echo "::set-output name=date::$(Get-Date -Format 'yyyyMMdd')"

      - name: Zip Publish Folder  # Debugging von vorher beibehalten
        id: zip_folder
        shell: pwsh
        run: |
          Write-Host "### Debug: Inhalt des Publish-Ordners vor dem Zippen ###"
          Get-ChildItem -Path "./TraceViewer/bin/Release/net8.0-windows/win-x64/publish/" -Recurse

          Write-Host "### Debug: Ausgef√ºhrter Compress-Archive Befehl ###"
          Write-Host "Compress-Archive -Path './TraceViewer/bin/Release/net8.0-windows/win-x64/publish/*' -DestinationPath './TraceViewer-nightly-${{ steps.get_date.outputs.date }}-publish.zip'"

          Compress-Archive -Path "./TraceViewer/bin/Release/net8.0-windows/win-x64/publish/*" -DestinationPath "./TraceViewer-nightly-${{ steps.get_date.outputs.date }}-publish.zip"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly-${{ steps.get_date.outputs.date }}
          release_name: Nightly Release ${{ steps.get_date.outputs.date }}
          body: |
            Nightly Release of the TraceViewer solution.
          draft: false
          prerelease: true

      - name: Upload Publish ZIP
        id: upload-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./TraceViewer-nightly-${{ steps.get_date.outputs.date }}-publish.zip
          asset_name: TraceViewer-nightly-${{ steps.get_date.outputs.date }}-publish.zip
          asset_content_type: application/zip
